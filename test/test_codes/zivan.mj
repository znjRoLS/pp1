program Test
const int m = 1, m2 = 3;
const char c = 'c', c1 ='a';
const bool t = true, f = false;
char x, y[], z[];

class klasa1 {
}

class klasa2 {
    {
    }
}

class klasa3 extends klasa2 {
    {
    }
}

class klasa4 {
    int x, y[], z;
    int x2, y3[], z4;
}

class klasa4 {
    int x, y[], z;
    int x2, y3[], z4;
    {
    }
}

class klasa4 {
    Tip x, y[], z;
    Tip1 x2, y3[], z4;
    {
        Tip Mama () {}
        Void Tata() {}
        static Tip Mam1() {}
        static void Mmaa2() {}
        static void baba(int z) {}
        static void deda(int e, float y, bip z)
        int baba, deda[], deda2;
        float z[], babaf;
        {}
        int main() bool t;{}
    }
}



{
    void main()
    bool t;
    bool z;
    {
        t = -z += z *= 3 /=5 %= 3 -= z + z -z / z % z * z;
        z();
        z(3, 3, 4);
        z(3 +3-=4, 2-3);
        z ++;
        z --;
        z += 3;
        z += 'z' + 3 + true + false+ new Type + new Type[3];
        z += 'z' + 3 + true + false+ new Type + new Type[3]
        + ('z' + 3 + true + false+ new Type + new Type[3]) ;

        if (1 < 8 && 2 > 1 && 3 <= 7 &&
            5 >= 4 || 5 != 6 || 5 == 2 || 7) {}
        z = x;
        z -= z() + z(1) + z(true + false+ new Type + new Type[3]);
        z.z.z.z = 3;
        z.z.z.z[3+3*4-5].z[5] = 3;

        if (1 == 1)
            z = 3;

        else
            z = 4;

        if (1 == 3 && 4 > 4)
            if (3 == 3)
                if (3 == 3)
                    z=  1;
                else
                {
                    z += 5;
                }
        z = 3;
        for (; ; ) z = 1;
        for (; z > 1; z ++) z = 1;
        for (z = 3; z > 1; z ++) z = 1;
        for (i = 0; i < n; i ++)
        {

            if (i > 1)
            {
                break;
            }
            if (i > 1)
            {
                continue;
            }

            if (i > 1) {
                return;
            }
            if (i < 1) {
                return 3 + 3;
            }

            read (x.x[3]);
            print(3 +3, 3);
        }
    }
}